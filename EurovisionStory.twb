<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
    </datasource>
    <datasource caption='eurovision_1998to2012' inline='true' name='federated.0d7n0av0e4gjl5199880o1sibe1f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='eurovision_1998to2012' name='excel-direct.1rfd82o0bb8vl11emh4r113iu9jr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/adria/Documents/My Tableau Repository/Workbooks/Assignment 1/eurovision_1998to2012.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1rfd82o0bb8vl11emh4r113iu9jr' name='Eurovision' table='[Eurovision$]' type='table'>
          <columns gridOrigin='A1:AE368:no:A1:AE368:0' header='yes' outcome='2'>
            <column datatype='date' name='Year' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='latitude' ordinal='2' />
            <column datatype='real' name='Longitude' ordinal='3' />
            <column datatype='string' name='Region' ordinal='4' />
            <column datatype='string' name='Artist' ordinal='5' />
            <column datatype='string' name='Song' ordinal='6' />
            <column datatype='string' name='Group.Solo' ordinal='7' />
            <column datatype='integer' name='Place' ordinal='8' />
            <column datatype='integer' name='Win' ordinal='9' />
            <column datatype='integer' name='Runner up' ordinal='10' />
            <column datatype='integer' name='Points' ordinal='11' />
            <column datatype='string' name='Home.Away.Country' ordinal='12' />
            <column datatype='string' name='Home.Away.Region' ordinal='13' />
            <column datatype='integer' name='Is.Final' ordinal='14' />
            <column datatype='integer' name='Song.In.English' ordinal='15' />
            <column datatype='real' name='Song.Quality' ordinal='16' />
            <column datatype='real' name='Normalized.Points' ordinal='17' />
            <column datatype='string' name='energy' ordinal='18' />
            <column datatype='string' name='duration' ordinal='19' />
            <column datatype='string' name='acousticness' ordinal='20' />
            <column datatype='string' name='danceability' ordinal='21' />
            <column datatype='string' name='tempo' ordinal='22' />
            <column datatype='string' name='speechiness' ordinal='23' />
            <column datatype='string' name='key' ordinal='24' />
            <column datatype='string' name='liveness' ordinal='25' />
            <column datatype='string' name='time_signature' ordinal='26' />
            <column datatype='string' name='mode' ordinal='27' />
            <column datatype='string' name='loudness' ordinal='28' />
            <column datatype='string' name='valence' ordinal='29' />
            <column datatype='string' name='Happiness' ordinal='30' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1rfd82o0bb8vl11emh4r113iu9jr' name='Eurovision' table='[Eurovision$]' type='table'>
            <columns gridOrigin='A1:AE368:no:A1:AE368:0' header='yes' outcome='2'>
              <column datatype='date' name='Year' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='real' name='latitude' ordinal='2' />
              <column datatype='real' name='Longitude' ordinal='3' />
              <column datatype='string' name='Region' ordinal='4' />
              <column datatype='string' name='Artist' ordinal='5' />
              <column datatype='string' name='Song' ordinal='6' />
              <column datatype='string' name='Group.Solo' ordinal='7' />
              <column datatype='integer' name='Place' ordinal='8' />
              <column datatype='integer' name='Win' ordinal='9' />
              <column datatype='integer' name='Runner up' ordinal='10' />
              <column datatype='integer' name='Points' ordinal='11' />
              <column datatype='string' name='Home.Away.Country' ordinal='12' />
              <column datatype='string' name='Home.Away.Region' ordinal='13' />
              <column datatype='integer' name='Is.Final' ordinal='14' />
              <column datatype='integer' name='Song.In.English' ordinal='15' />
              <column datatype='real' name='Song.Quality' ordinal='16' />
              <column datatype='real' name='Normalized.Points' ordinal='17' />
              <column datatype='string' name='energy' ordinal='18' />
              <column datatype='string' name='duration' ordinal='19' />
              <column datatype='string' name='acousticness' ordinal='20' />
              <column datatype='string' name='danceability' ordinal='21' />
              <column datatype='string' name='tempo' ordinal='22' />
              <column datatype='string' name='speechiness' ordinal='23' />
              <column datatype='string' name='key' ordinal='24' />
              <column datatype='string' name='liveness' ordinal='25' />
              <column datatype='string' name='time_signature' ordinal='26' />
              <column datatype='string' name='mode' ordinal='27' />
              <column datatype='string' name='loudness' ordinal='28' />
              <column datatype='string' name='valence' ordinal='29' />
              <column datatype='string' name='Happiness' ordinal='30' />
            </columns>
          </relation>
          <relation connection='excel-direct.1rfd82o0bb8vl11emh4r113iu9jr' name='Voting Final' table='[&apos;Voting Final$&apos;]' type='table'>
            <columns gridOrigin='A1:D12132:no:A1:D12132:0' header='yes' outcome='6'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='string' name='Giver' ordinal='2' />
              <column datatype='integer' name='Score' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Artist]' value='[Eurovision].[Artist]' />
          <map key='[Country (Voting Final)]' value='[Voting Final].[Country]' />
          <map key='[Country]' value='[Eurovision].[Country]' />
          <map key='[Giver]' value='[Voting Final].[Giver]' />
          <map key='[Group.Solo]' value='[Eurovision].[Group.Solo]' />
          <map key='[Happiness]' value='[Eurovision].[Happiness]' />
          <map key='[Home.Away.Country]' value='[Eurovision].[Home.Away.Country]' />
          <map key='[Home.Away.Region]' value='[Eurovision].[Home.Away.Region]' />
          <map key='[Is.Final]' value='[Eurovision].[Is.Final]' />
          <map key='[Longitude]' value='[Eurovision].[Longitude]' />
          <map key='[Normalized.Points]' value='[Eurovision].[Normalized.Points]' />
          <map key='[Place]' value='[Eurovision].[Place]' />
          <map key='[Points]' value='[Eurovision].[Points]' />
          <map key='[Region]' value='[Eurovision].[Region]' />
          <map key='[Runner up]' value='[Eurovision].[Runner up]' />
          <map key='[Score]' value='[Voting Final].[Score]' />
          <map key='[Song.In.English]' value='[Eurovision].[Song.In.English]' />
          <map key='[Song.Quality]' value='[Eurovision].[Song.Quality]' />
          <map key='[Song]' value='[Eurovision].[Song]' />
          <map key='[Win]' value='[Eurovision].[Win]' />
          <map key='[Year (Voting Final)]' value='[Voting Final].[Year]' />
          <map key='[Year]' value='[Eurovision].[Year]' />
          <map key='[acousticness]' value='[Eurovision].[acousticness]' />
          <map key='[danceability]' value='[Eurovision].[danceability]' />
          <map key='[duration]' value='[Eurovision].[duration]' />
          <map key='[energy]' value='[Eurovision].[energy]' />
          <map key='[key]' value='[Eurovision].[key]' />
          <map key='[latitude]' value='[Eurovision].[latitude]' />
          <map key='[liveness]' value='[Eurovision].[liveness]' />
          <map key='[loudness]' value='[Eurovision].[loudness]' />
          <map key='[mode]' value='[Eurovision].[mode]' />
          <map key='[speechiness]' value='[Eurovision].[speechiness]' />
          <map key='[tempo]' value='[Eurovision].[tempo]' />
          <map key='[time_signature]' value='[Eurovision].[time_signature]' />
          <map key='[valence]' value='[Eurovision].[valence]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AE368:no:A1:AE368:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Voting Final]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D12132:no:A1:D12132:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Artist</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Artist]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Artist</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Song</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Song]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Song</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group.Solo</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group.Solo]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Group.Solo</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Place</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Place]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Place</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Win</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Win]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Win</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Runner up</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Runner up]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Runner up</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Points]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Points</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Home.Away.Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Home.Away.Country]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Home.Away.Country</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Home.Away.Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Home.Away.Region]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Home.Away.Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is.Final</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Is.Final]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Is.Final</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Song.In.English</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Song.In.English]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Song.In.English</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Song.Quality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Song.Quality]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Song.Quality</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Normalized.Points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Normalized.Points]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Normalized.Points</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>energy</remote-name>
            <remote-type>130</remote-type>
            <local-name>[energy]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>energy</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>130</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>acousticness</remote-name>
            <remote-type>130</remote-type>
            <local-name>[acousticness]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>acousticness</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>danceability</remote-name>
            <remote-type>130</remote-type>
            <local-name>[danceability]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>danceability</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tempo</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tempo]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>tempo</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>speechiness</remote-name>
            <remote-type>130</remote-type>
            <local-name>[speechiness]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>speechiness</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>key</remote-name>
            <remote-type>130</remote-type>
            <local-name>[key]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>key</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>liveness</remote-name>
            <remote-type>130</remote-type>
            <local-name>[liveness]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>liveness</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_signature</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time_signature]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>time_signature</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loudness</remote-name>
            <remote-type>130</remote-type>
            <local-name>[loudness]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>loudness</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>valence</remote-name>
            <remote-type>130</remote-type>
            <local-name>[valence]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>valence</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Happiness]</local-name>
            <parent-name>[Eurovision]</parent-name>
            <remote-alias>Happiness</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Voting Final)]</local-name>
            <parent-name>[Voting Final]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Voting Final_0479DE458B8E4B1993EB785C798E96F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Voting Final)]</local-name>
            <parent-name>[Voting Final]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Voting Final_0479DE458B8E4B1993EB785C798E96F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Giver</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Giver]</local-name>
            <parent-name>[Voting Final]</parent-name>
            <remote-alias>Giver</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Voting Final_0479DE458B8E4B1993EB785C798E96F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[Voting Final]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Voting Final_0479DE458B8E4B1993EB785C798E96F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country (Voting Final)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Giver]' role='dimension' type='nominal' />
      <column datatype='string' name='[Home.Away.Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Year (Voting Final)]' role='dimension' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Eurovision' datatype='table' name='[__tableau_internal_object_id__].[Eurovision_0C342FF0B0C9428EACC2EF551784FFAE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Voting Final' datatype='table' name='[__tableau_internal_object_id__].[Voting Final_0479DE458B8E4B1993EB785C798E96F1]' role='measure' type='quantitative' />
      <column caption='Acousticness' datatype='string' name='[acousticness]' role='dimension' type='nominal' />
      <column caption='Danceability' datatype='string' name='[danceability]' role='dimension' type='nominal' />
      <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
      <column caption='Energy' datatype='string' name='[energy]' role='dimension' type='nominal' />
      <column caption='Key' datatype='string' name='[key]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Liveness' datatype='string' name='[liveness]' role='dimension' type='nominal' />
      <column caption='Loudness' datatype='string' name='[loudness]' role='dimension' type='nominal' />
      <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal' />
      <column caption='Speechiness' datatype='string' name='[speechiness]' role='dimension' type='nominal' />
      <column caption='Tempo' datatype='string' name='[tempo]' role='dimension' type='nominal' />
      <column caption='Time Signature' datatype='string' name='[time_signature]' role='dimension' type='nominal' />
      <column caption='Valence' datatype='string' name='[valence]' role='dimension' type='nominal' />
      <column-instance column='[Country (Voting Final)]' derivation='None' name='[none:Country (Voting Final):nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Giver]' derivation='None' name='[none:Giver:nk]' pivot='key' type='nominal' />
      <column-instance column='[Home.Away.Country]' derivation='None' name='[none:Home.Away.Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Region, Country'>
          <field>[Region]</field>
          <field>[Country]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Year:ok]' type='palette'>
            <map to='#499894'>
              <bucket>2006</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1998</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2002</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2010</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2007</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2003</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1999</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2004</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2011</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2012</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2008</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2005</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2000</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2009</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2001</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Giver:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia and Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia-Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country (Voting Final):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia-Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia and Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Home.Away.Country:nk]' type='palette'>
            <map to='#64cdcc'>
              <bucket>&quot;Home&quot;</bucket>
            </map>
            <map to='#dab6af'>
              <bucket>%null%</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Away&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Malaysia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Eurovision' id='Eurovision_0C342FF0B0C9428EACC2EF551784FFAE'>
            <properties context=''>
              <relation connection='excel-direct.1rfd82o0bb8vl11emh4r113iu9jr' name='Eurovision' table='[Eurovision$]' type='table'>
                <columns gridOrigin='A1:AE368:no:A1:AE368:0' header='yes' outcome='2'>
                  <column datatype='date' name='Year' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='latitude' ordinal='2' />
                  <column datatype='real' name='Longitude' ordinal='3' />
                  <column datatype='string' name='Region' ordinal='4' />
                  <column datatype='string' name='Artist' ordinal='5' />
                  <column datatype='string' name='Song' ordinal='6' />
                  <column datatype='string' name='Group.Solo' ordinal='7' />
                  <column datatype='integer' name='Place' ordinal='8' />
                  <column datatype='integer' name='Win' ordinal='9' />
                  <column datatype='integer' name='Runner up' ordinal='10' />
                  <column datatype='integer' name='Points' ordinal='11' />
                  <column datatype='string' name='Home.Away.Country' ordinal='12' />
                  <column datatype='string' name='Home.Away.Region' ordinal='13' />
                  <column datatype='integer' name='Is.Final' ordinal='14' />
                  <column datatype='integer' name='Song.In.English' ordinal='15' />
                  <column datatype='real' name='Song.Quality' ordinal='16' />
                  <column datatype='real' name='Normalized.Points' ordinal='17' />
                  <column datatype='string' name='energy' ordinal='18' />
                  <column datatype='string' name='duration' ordinal='19' />
                  <column datatype='string' name='acousticness' ordinal='20' />
                  <column datatype='string' name='danceability' ordinal='21' />
                  <column datatype='string' name='tempo' ordinal='22' />
                  <column datatype='string' name='speechiness' ordinal='23' />
                  <column datatype='string' name='key' ordinal='24' />
                  <column datatype='string' name='liveness' ordinal='25' />
                  <column datatype='string' name='time_signature' ordinal='26' />
                  <column datatype='string' name='mode' ordinal='27' />
                  <column datatype='string' name='loudness' ordinal='28' />
                  <column datatype='string' name='valence' ordinal='29' />
                  <column datatype='string' name='Happiness' ordinal='30' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Voting Final' id='Voting Final_0479DE458B8E4B1993EB785C798E96F1'>
            <properties context=''>
              <relation connection='excel-direct.1rfd82o0bb8vl11emh4r113iu9jr' name='Voting Final' table='[&apos;Voting Final$&apos;]' type='table'>
                <columns gridOrigin='A1:D12132:no:A1:D12132:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Giver' ordinal='2' />
                  <column datatype='integer' name='Score' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Voting Final)]' />
            </expression>
            <first-end-point object-id='Eurovision_0C342FF0B0C9428EACC2EF551784FFAE' />
            <second-end-point object-id='Voting Final_0479DE458B8E4B1993EB785C798E96F1' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Gave Most Points'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Which  top 10 countries gave the most points to the winners?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='eurovision_1998to2012' name='federated.0d7n0av0e4gjl5199880o1sibe1f' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0d7n0av0e4gjl5199880o1sibe1f'>
            <column datatype='string' name='[Country (Voting Final)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Giver]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Win]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country (Voting Final)]' derivation='None' name='[none:Country (Voting Final):nk]' pivot='key' type='nominal' />
            <column-instance column='[Giver]' derivation='None' name='[none:Giver:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Win]' derivation='Sum' name='[sum:Win:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country (Voting Final):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Win])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Country (Voting Final):nk]' />
                  <groupfilter function='member' level='[none:Country (Voting Final):nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Giver:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Giver:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Win:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <filter class='categorical' column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]'>
            <groupfilter function='level-members' level='[yr:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Giver:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Score:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]</column>
            <column>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country (Voting Final):nk]</column>
            <column>[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Win:qk]</column>
            <column>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Giver:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country (Voting Final):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Giver:nk]</rows>
        <cols>[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Score:qk]</cols>
      </table>
      <simple-id uuid='{5B79B785-EED1-4002-A271-7B806BD74211}' />
    </worksheet>
    <worksheet name='Host Points'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Does hosting the Eurovision increases the points?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='eurovision_1998to2012' name='federated.0d7n0av0e4gjl5199880o1sibe1f' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0d7n0av0e4gjl5199880o1sibe1f'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Home.Away.Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Home.Away.Country]' derivation='None' name='[none:Home.Away.Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Home.Away.Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Home.Away.Country:nk]' member='&quot;Away&quot;' />
              <groupfilter function='member' level='[none:Home.Away.Country:nk]' member='&quot;Home&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Home.Away.Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Score:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Score:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Score:qk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Home.Away.Country:nk]' />
              <text column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.44977900385856628' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value='times' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Score:qk]</rows>
        <cols>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country:nk]</cols>
        <pages>
          <column>[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{065FE067-6309-4E0A-BC3F-8B55D614130F}' />
    </worksheet>
    <worksheet name='Most Wins'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Which Country Has The Most Number of Wins?</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='eurovision_1998to2012' name='federated.0d7n0av0e4gjl5199880o1sibe1f' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0d7n0av0e4gjl5199880o1sibe1f'>
            <column datatype='string' name='[Country (Voting Final)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Win]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country (Voting Final)]' derivation='None' name='[none:Country (Voting Final):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Win]' derivation='Sum' name='[sum:Win:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]'>
            <groupfilter function='level-members' level='[yr:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0d7n0av0e4gjl5199880o1sibe1f].[Longitude (generated)]' field-type='quantitative' fold='true' max='12468469.327943705' min='225189.80294511304' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0d7n0av0e4gjl5199880o1sibe1f].[Longitude (generated)]' field-type='quantitative' max='12468469.327943705' min='225189.80294511304' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0d7n0av0e4gjl5199880o1sibe1f].[Latitude (generated)]' field-type='quantitative' max='12521784.267882537' min='3728665.6792130689' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Win:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eaf2e6</color>
                <color>#e3f3db</color>
                <color>#dcf5d0</color>
                <color>#d5f6c5</color>
                <color>#cef8b9</color>
                <color>#c7f9ae</color>
                <color>#c0faa2</color>
                <color>#b8fc96</color>
                <color>#b1fd8b</color>
                <color>#aaff7f</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Win:qk]' field-type='quantitative' max-size='1' min-size='0.00688003' type='quantsize' />
            <encoding attr='color' field='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Score:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country (Voting Final):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
                <format attr='shape' value=':filled/asterisk' />
                <format attr='size' value='0.9538148045539856' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0d7n0av0e4gjl5199880o1sibe1f].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Score:qk]' />
              <lod column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country (Voting Final):nk]' />
              <geometry column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
                <format attr='shape' value=':filled/asterisk' />
                <format attr='size' value='0.9538148045539856' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0d7n0av0e4gjl5199880o1sibe1f].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Win:qk]' />
              <text column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country:nk]' />
              <lod column='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country (Voting Final):nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
                <format attr='shape' value=':filled/asterisk' />
                <format attr='size' value='1.1974033117294312' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0d7n0av0e4gjl5199880o1sibe1f].[Latitude (generated)]</rows>
        <cols>([federated.0d7n0av0e4gjl5199880o1sibe1f].[Longitude (generated)] + [federated.0d7n0av0e4gjl5199880o1sibe1f].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{D27EE00C-5E00-461E-B7F2-2BC4E7C79AFD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='eurovision_1998to2012' name='federated.0d7n0av0e4gjl5199880o1sibe1f' />
      </datasources>
      <datasource-dependencies datasource='federated.0d7n0av0e4gjl5199880o1sibe1f'>
        <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='52000' id='7' param='horz' type-v2='layout-flow' w='46700' x='52500' y='6125'>
            <zone h='52000' id='5' type-v2='layout-basic' w='35800' x='52500' y='6125'>
              <zone h='52000' id='11' name='Gave Most Points' w='27388' x='60912' y='6125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9169' id='9' name='Most Wins' pane-specification-id='2' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Score:qk]' type-v2='color' w='8412' x='52500' y='13410'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35546' id='10' name='Most Wins' pane-specification-id='3' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Win:qk]' type-v2='size' w='8412' x='52500' y='22579'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7285' id='8' mode='dropdown' name='Most Wins' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]' type-v2='filter' w='8412' x='52500' y='6125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='109' h='52000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10900' x='88300' y='6125'>
              <zone h='6500' id='12' mode='dropdown' name='Gave Most Points' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]' type-v2='filter' w='10900' x='88300' y='6125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='322' h='41250' id='13' is-fixed='true' name='Gave Most Points' pane-specification-id='0' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country (Voting Final):nk]' type-v2='color' w='10900' x='88300' y='12625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='40875' id='14' name='Host Points' w='85300' x='800' y='58125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='32375' id='16' name='Host Points' synchronized='1' type-v2='currpage' w='13100' x='86100' y='66625'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='8500' id='15' leg-item-layout='grid' name='Host Points' pane-specification-id='0' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Home.Away.Country:nk]' type-v2='color' w='13100' x='86100' y='58125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='5125' id='19' type-v2='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#000000' fontsize='16'>Explore the winning factors</run>
              <run fontalignment='1'>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='52000' id='3' name='Most Wins' w='51700' x='800' y='6125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='28' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='5125' id='19' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontsize='16'>Explore the winning factors</run>
                    <run fontalignment='1'>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7285' id='8' mode='dropdown' name='Most Wins' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]' type-v2='filter' w='8412' x='52500' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52000' id='3' is-fixed='true' name='Most Wins' w='51700' x='800' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9169' id='9' name='Most Wins' pane-specification-id='2' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Score:qk]' type-v2='color' w='8412' x='52500' y='13410'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='35546' id='10' name='Most Wins' pane-specification-id='3' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Win:qk]' type-v2='size' w='8412' x='52500' y='22579'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='12' mode='dropdown' name='Gave Most Points' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]' type-v2='filter' w='10900' x='88300' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52000' id='11' is-fixed='true' name='Gave Most Points' w='27388' x='60912' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='322' h='41250' id='13' name='Gave Most Points' pane-specification-id='0' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country (Voting Final):nk]' type-v2='color' w='10900' x='88300' y='12625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40875' id='14' is-fixed='true' name='Host Points' w='85300' x='800' y='58125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8500' id='15' leg-item-layout='grid' name='Host Points' pane-specification-id='0' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Home.Away.Country:nk]' type-v2='color' w='13100' x='86100' y='58125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='32375' id='16' name='Host Points' synchronized='1' type-v2='currpage' w='13100' x='86100' y='66625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5820E6C6-EE2B-4DDD-B994-8BD4C4994F2A}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Most Wins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='69' type='filters' />
            <card size='294' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Score:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Win:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country (Voting Final):nk]</field>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country:nk]</field>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Giver:nk]</field>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Win:qk]</field>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D3A1C07-A2EE-4F27-BC77-393B151F27FB}' />
    </window>
    <window class='worksheet' name='Gave Most Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country (Voting Final):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country (Voting Final):nk]</field>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Year (Voting Final):qk]</field>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{85FF3609-F88F-4376-BC9A-C352F87321AB}' />
    </window>
    <window class='worksheet' name='Host Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Home.Away.Country:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1998</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country:nk]</field>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Giver:nk]</field>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Home.Away.Country:nk]</field>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Region:nk]</field>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Win:qk]</field>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[sum:Points:qk]</field>
            <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0ED1C9CD-D102-4883-8C8E-2CC68043CAF5}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Gave Most Points'>
          <highlight>
            <color-one-way>
              <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Country (Voting Final):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Host Points'>
          <current-page>
            <multibucket>
              <bucket>1998</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0d7n0av0e4gjl5199880o1sibe1f].[none:Home.Away.Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Most Wins'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C84D3B65-3FA7-40E7-81D2-2417F2A6A50F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='Dashboard 1' width='240'>
      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
      /wFhDqKC8NnN+AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Gave Most Points' width='240'>
      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
      PxerWuTmtavIbfv4tUeSSIBkVHHzBSx8mDTgmiap2Szx3kCtG3wPLvnZIU5dvUZsboEhCbKz
      N7FSp5npbqLZMNENA/CB62BUTRKBjfUuABAM4Q9107GzhWcONlKZOk/m2rsiwLWhEg1VKVtF
      SlULfzFPcWION/LYxtoDz6liVrPkrQB7mxMfXW8pPgJmEV13KZu9UCoyMecSGNhQrf+QabvI
      1QyjoxkA9GIWJ7iAEonTEbbIlSq4hLHNIrkiNGsb8DiCUaLWNKpRwnYb8fn9xGIhsZSyVqzl
      QcbH5rg0VQTHRTcDPPXVX6QrsoGGJTKDLE5f569Om7S3rGxiJ8kKe598keTSGW7dmuF6RkZy
      ZfTgTp5/ejstkQ126nkPw+/8JdWdv8mBZpfi7HXePHMVW9ZwDJ1k7xM8fqh9g50JAdjMX3id
      6eUyc2UJ25awLE0EuHYcbL1COpPDUoL4Q1GSoQ12HyWzjKmXWcjeMT0kSSQa24moJqZRJZ3O
      gS9KJBEjqLDB5rHvTS9lcXwJghrgWhQyaXJlY2UjxKYG/MoGPQbHQK9WyGSLuFoIXzAiAiwI
      XraBztcEQbhfIsCC4GEiwILgYSLAguBhIsCC4GEiwILgYSLAguBhIsCC4GEiwILgYSLAguBh
      IsCC4GEiwILgYSLAguBhIsCC4GEiwILgYSLAguBhIsCC4GEiwILgYSLAguBhIsCC4GEiwILg
      YSLAguBhIsCC4GEiwILgYSLAguBh/x3n38kjeKxXZwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Host Points' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Most Wins' width='240'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
